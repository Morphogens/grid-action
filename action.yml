name: "Morphogen grid build and release"
description: "Builds and pushes images and deploys to grid."

inputs:
  aws_access_key_id:
    required: true
  aws_secret_access_key:
    required: true
  docker_context:
    required: true
  docker_file:
    required: false
  docker_test_command:
    required: false
  grid_deploy_key:
    required: true
  grid_environment:
    required: true
  grid_project:
    required: true
  grid_package_ref:
    required: false
    default: main

runs:
  using: composite
  steps:
    - name: Set up docker buildx
      uses: docker/setup-buildx-action@v1

    - name: Set up python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Login to Morphogen ECR
      uses: docker/login-action@v1
      with:
        registry: 775974887579.dkr.ecr.us-east-1.amazonaws.com
        username: ${{ inputs.aws_access_key_id }}
        password: ${{ inputs.aws_secret_access_key }}

    - name: Calculate image hash and check existence
      id: image_hash
      shell: bash
      run: |
        HASH=$(find ${{ inputs.docker_context }} -not -path "*/.git/*" -type f -print0 | sort -z | xargs -0 cat | sha1sum | awk '{ print $1 }')
        TAG="${{ inputs.grid_project }}-$HASH"
        IMAGE="775974887579.dkr.ecr.us-east-1.amazonaws.com/projects:$TAG"
        echo "::set-output name=hash::$HASH"
        echo "::set-output name=tag::$TAG"
        echo "::set-output name=image::$IMAGE"
        if aws ecr describe-images --repository-name projects --region us-east-1 --image-ids=imageTag=$TAG >/dev/null 2>&1; then
          echo "Image $TAG already exists, skipping build."
          echo "::set-output name=exists::true"
        else
          echo "Image $TAG does not exist, building."
          echo "::set-output name=exists::false"
        fi
      env:
        AWS_ACCESS_KEY_ID: ${{ inputs.aws_access_key_id }}
        AWS_SECRET_ACCESS_KEY: ${{ inputs.aws_secret_access_key }}
        AWS_REGION: us-east-1

    - name: Build docker image
      id: build
      uses: docker/build-push-action@v2
      if: steps.image_hash.outputs.exists == 'false'
      with:
        context: ${{ inputs.docker_context }}
        file: ${{ inputs.docker_file }}
        push: true
        tags: ${{ steps.image_hash.outputs.image }}
        cache-from: type=gha
        cache-to: type=gha

    - name: Test
      if: inputs.docker_test_command && steps.build.conclusion == 'success'
      run: docker run --rm ${{ steps.image_hash.outputs.image }} ${{ inputs.docker_test_command }}
      shell: bash
      
    - name: Deploy
      shell: bash
      run: |
        # Install AWS authenticator
        curl -s -o aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.21.2/2021-07-05/bin/linux/amd64/aws-iam-authenticator
        chmod +x ./aws-iam-authenticator
        export PATH="${PWD}:$PATH"

        # Add grid deploy key for pip install
        echo "${GRID_DEPLOY_KEY}" > /tmp/grid-key
        chmod 0600 /tmp/grid-key

        export GIT_SSH_COMMAND="ssh -i /tmp/grid-key"

        # Install grid tool from private grid repo
        python -m pip install -q git+ssh://git@github.com/Morphogens/grid.git@${{ inputs.grid_package_ref }}

        # Run deploy
        grid deploy --environment ${{ inputs.grid_environment }} --project ${{ inputs.grid_project }} --commit ${{ steps.image_hash.outputs.hash }}
      env:
        AWS_ACCESS_KEY_ID: ${{ inputs.aws_access_key_id }}
        AWS_SECRET_ACCESS_KEY: ${{ inputs.aws_secret_access_key }}
        AWS_REGION: us-east-1
        GRID_DEPLOY_KEY: ${{ inputs.grid_deploy_key }}